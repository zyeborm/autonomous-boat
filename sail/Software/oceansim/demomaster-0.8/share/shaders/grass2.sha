//Cg
//Cg profile arbvp1 arbfp1
// from http://panda3d.org/phpbb2/viewtopic.php?t=2385
// modified by clcheung Mar 2009
// 	jitter only apply to the higher vertex position
//  clipping disabled if k_grass.w == 0
void vshader( in float4 vtx_position : POSITION,
              in float2 vtx_texcoord0 : TEXCOORD0,
              in uniform float4x4 mat_modelproj,
              in uniform float4x4 mat_modelview,
			  in float3 vtx_normal : NORMAL,
			  in uniform float4 mspos_light,
              in uniform float4 k_grass,
			  in uniform float4 k_ambient,
			  in uniform float4 k_lightcolor,
			  in uniform float4 k_attenuation,
              out float l_distance,
              out float2 l_texcoord0 : TEXCOORD0,
              out float4 l_position : POSITION,
			  out float4 l_color: COLOR)
{
    // jitter
	if (vtx_texcoord0.y > 0.2)
		vtx_position.xy += k_grass.xy * vtx_texcoord0.y;

    // clipping
    l_distance = length( mul( mat_modelview, vtx_position ) );

    // position and texcoord
    l_position = mul( mat_modelproj, vtx_position );
    l_texcoord0 = vtx_texcoord0;

	//float3 light = normalize(mspos_light.xyz - (vtx_position.xyz * mspos_light.w));
	float3 light = normalize(mspos_light.xyz - (vtx_position.xyz));
    float brightness = saturate(max(dot(vtx_normal.xyz, light),dot(-vtx_normal.xyz, light)));
	float d=length(mspos_light.xyz-vtx_position.xyz);
	float attenuation=1/(k_attenuation.x+k_attenuation.y*d+k_attenuation.z*d*d);
	
	//l_color = k_ambient + brightness * k_lightcolor * attenuation;
	l_color = k_ambient + max(brightness,0.3) * k_lightcolor * attenuation;
}

void fshader( in float4 l_position : POSITION,
              in float2 l_texcoord0 : TEXCOORD0,
              in uniform float4 k_grass,
              in float l_distance,
			  in float4 l_color : COLOR,

              in uniform sampler2D tex_0 : TEXUNIT0,

              out float4 o_color : COLOR )
{
    // clipping
    if ( k_grass.w > 0 && l_distance > k_grass.w ) discard;

    // texture
    o_color = tex2D( tex_0, l_texcoord0 );
	o_color *= l_color;
	//o_color.a *= 2;
}
