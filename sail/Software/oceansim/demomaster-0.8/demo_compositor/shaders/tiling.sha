//Cg
//Cg profile arbvp1 arbfp1
// clcheung: tiling from ogre

void vshader(float4 vtx_position : POSITION, 
             float2 vtx_texcoord0 : TEXCOORD0,
             out float4 l_position : POSITION,
      	     out float2 l_texcoord0 : TEXCOORD0,
			 uniform float4 texpad_src,
             uniform float4x4 mat_modelproj)
{
  l_position=mul(mat_modelproj, vtx_position);
  //l_texcoord0=vtx_texcoord0;
  l_texcoord0 = vtx_position.xz * texpad_src.xy + texpad_src.xy;
}


void fshader(float2 l_texcoord0 : TEXCOORD0,
             out float4 o_color : COLOR,
			 uniform float4 k_param1,
             uniform sampler2D k_src : TEXUNIT0)
{
	half NumTiles=k_param1.x;//100;//75;
	half Threshhold=k_param1.y;//1;//0.75;
	half3 EdgeColor = {0.7, 0.7, 0.7};
    half size = 1.0/NumTiles;
    half2 Pbase = l_texcoord0 - fmod(l_texcoord0, size.xx);
    half2 PCenter = Pbase + (size/2.0).xx;
    half2 st = (l_texcoord0 - Pbase)/size;
    half4 c1 = (half4)0;
    half4 c2 = (half4)0;
    half4 invOff = half4((1-EdgeColor),1);
    if (st.x > st.y) { c1 = invOff; }
    half threshholdB =  1.0 - Threshhold;
    if (st.x > threshholdB) { c2 = c1; }
    if (st.y > threshholdB) { c2 = c1; }
    half4 cBottom = c2;
    c1 = (half4)0;
    c2 = (half4)0;
    if (st.x > st.y) { c1 = invOff; }
    if (st.x < Threshhold) { c2 = c1; }
    if (st.y < Threshhold) { c2 = c1; }
    half4 cTop = c2;
    half4 tileColor = tex2D(k_src, PCenter);
    half4 result = tileColor + cTop - cBottom;

	o_color  = result;
	o_color.w = 1;
}
